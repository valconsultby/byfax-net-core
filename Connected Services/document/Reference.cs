//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace document
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:ApiServiceDocument", ConfigurationName="document.ApiServiceDocumentSoap")]
    public interface ApiServiceDocumentSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="#uploadDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        document.ApiResponseDocUpload uploadDocument([System.ServiceModel.MessageParameterAttribute(Name="uploadDocument")] document.FaxDocument uploadDocument1);
        
        [System.ServiceModel.OperationContractAttribute(Action="#uploadDocument", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<document.ApiResponseDocUpload> uploadDocumentAsync(document.FaxDocument uploadDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="#downloadDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        document.ApiResponseFileDownload downloadDocument(string documentRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="#downloadDocument", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<document.ApiResponseFileDownload> downloadDocumentAsync(string documentRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="#deleteDocuments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        document.ApiResponse deleteDocuments(string[] documentRefs);
        
        [System.ServiceModel.OperationContractAttribute(Action="#deleteDocuments", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<document.ApiResponse> deleteDocumentsAsync(string[] documentRefs);
        
        [System.ServiceModel.OperationContractAttribute(Action="#checkDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        document.ApiResponseDocUpload checkDocument(string documentRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="#checkDocument", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<document.ApiResponseDocUpload> checkDocumentAsync(string documentRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="#getDocumentPreview", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        document.ApiResponseDocPreview getDocumentPreview(string documentRef, document.FaxQuality quality, document.FaxMode conversion);
        
        [System.ServiceModel.OperationContractAttribute(Action="#getDocumentPreview", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<document.ApiResponseDocPreview> getDocumentPreviewAsync(string documentRef, document.FaxQuality quality, document.FaxMode conversion);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceDocument")]
    public partial class UsernameToken
    {
        
        private string usernameField;
        
        private string passwordField;
        
        /// <remarks/>
        public string Username
        {
            get
            {
                return this.usernameField;
            }
            set
            {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ApiResponseDocUpload))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ApiResponseFileDownload))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ApiResponseDocPreview))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceDocument")]
    public partial class ApiResponse
    {
        
        private StateCodes stateCodeField;
        
        private string stateMessageField;
        
        /// <remarks/>
        public StateCodes stateCode
        {
            get
            {
                return this.stateCodeField;
            }
            set
            {
                this.stateCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string stateMessage
        {
            get
            {
                return this.stateMessageField;
            }
            set
            {
                this.stateMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceDocument")]
    public enum StateCodes
    {
        
        /// <remarks/>
        SUCCESS,
        
        /// <remarks/>
        API_FUNCTION_MISSING,
        
        /// <remarks/>
        API_FUNCTION_UNKNOWN,
        
        /// <remarks/>
        API_FUNCTION_ACCESS_DENIED,
        
        /// <remarks/>
        API_AGENT_MISSING,
        
        /// <remarks/>
        API_AGENT_NOT_FOUND,
        
        /// <remarks/>
        API_AGENT_DEACTIVATED,
        
        /// <remarks/>
        API_AGENT_KEY_NOT_MATCH,
        
        /// <remarks/>
        API_CUSTOMER_MISSING,
        
        /// <remarks/>
        API_CUSTOMER_NOT_FOUND,
        
        /// <remarks/>
        API_CUSTOMER_DEACTIVATED,
        
        /// <remarks/>
        API_CUSTOMER_KEY_NOT_MATCH,
        
        /// <remarks/>
        API_CUSTOMER_FEATURE_ACCESS_DENIED,
        
        /// <remarks/>
        API_KEY_MISSING,
        
        /// <remarks/>
        API_KEY_NOT_FOUND,
        
        /// <remarks/>
        API_KEY_DEACTIVATED,
        
        /// <remarks/>
        API_KEY_SECRET_NOT_MATCH,
        
        /// <remarks/>
        API_REQUEST_INCOMPLETE,
        
        /// <remarks/>
        API_REQUEST_FAILURE,
        
        /// <remarks/>
        API_REQUEST_VALIDATE,
        
        /// <remarks/>
        FILE_NOT_FOUND,
        
        /// <remarks/>
        FILE_DELETED,
        
        /// <remarks/>
        FILE_ACCESS_DENIED,
        
        /// <remarks/>
        FILE_STORAGE_MISSING,
        
        /// <remarks/>
        FILE_STORAGE_SIZE_MISMATCH,
        
        /// <remarks/>
        FILE_STORAGE_READ_ERROR,
        
        /// <remarks/>
        FILE_EXISTS,
        
        /// <remarks/>
        CUSTOMER_DELETED,
        
        /// <remarks/>
        CUSTOMER_NOT_CONFIRMED,
        
        /// <remarks/>
        CUSTOMER_BLOCKED,
        
        /// <remarks/>
        CUSTOMER_INACTIVE,
        
        /// <remarks/>
        CUSTOMER_WRONG_PASSWORD,
        
        /// <remarks/>
        CUSTOMER_PASSWORD_NOT_MATCH,
        
        /// <remarks/>
        CUSTOMER_CURRENT_PASSWORD_NOT_MATCH,
        
        /// <remarks/>
        CUSTOMER_EMAIL_IN_USE,
        
        /// <remarks/>
        CUSTOMER_SOCIAL_IN_USE,
        
        /// <remarks/>
        FILE_REFERENCE_DUPLICATE,
        
        /// <remarks/>
        FILE_STORAGE_COPY,
        
        /// <remarks/>
        FILE_INTEGRITY_FAILURE,
        
        /// <remarks/>
        FILE_FORMAT_UNSUPPORTED,
        
        /// <remarks/>
        FILE_FORMAT_EXCEPTION,
        
        /// <remarks/>
        FILE_FORMAT_UNKNOWN,
        
        /// <remarks/>
        FILE_DOWNLOAD_ERROR,
        
        /// <remarks/>
        FILE_VALIDATE_ERROR,
        
        /// <remarks/>
        FILE_OPEN_ERROR,
        
        /// <remarks/>
        FILE_THUMB_ERROR,
        
        /// <remarks/>
        DATABASE_RECORD_SAVE,
        
        /// <remarks/>
        DATABASE_QUERY_EXECUTE,
        
        /// <remarks/>
        DATABASE_QUERY_RESULT_SAVE,
        
        /// <remarks/>
        NUMBER_COUNTRY_UNKNOWN,
        
        /// <remarks/>
        NUMBER_NO_DIALING_RULE,
        
        /// <remarks/>
        NUMBER_NO_PRICE_RULE,
        
        /// <remarks/>
        COUNTRY_WRONG_ISO2,
        
        /// <remarks/>
        COUNTRY_NOT_SUPPORTED,
        
        /// <remarks/>
        COUNTRY_NO_ROUTE,
        
        /// <remarks/>
        EMPTY_RESULT,
        
        /// <remarks/>
        NUMBER_BLOCKED,
        
        /// <remarks/>
        NUMBER_UNOBTAINABLE,
        
        /// <remarks/>
        UNALLOCATED_NUMBER,
        
        /// <remarks/>
        INVALID_NUMBER,
        
        /// <remarks/>
        NUMBER_UNSUPPORTED,
        
        /// <remarks/>
        CALL_ABORTED,
        
        /// <remarks/>
        CALL_REJECTED,
        
        /// <remarks/>
        CALL_PLACE_ERROR,
        
        /// <remarks/>
        CALL_CREATE_ERROR,
        
        /// <remarks/>
        LINE_ATTACH,
        
        /// <remarks/>
        LINE_RESET,
        
        /// <remarks/>
        LINE_CAP_FAX,
        
        /// <remarks/>
        LINE_CAP_VOICE,
        
        /// <remarks/>
        LINE_SET_TSID,
        
        /// <remarks/>
        LINE_UNAUTHORIZED,
        
        /// <remarks/>
        LINE_REQUEST_TIMEOUT,
        
        /// <remarks/>
        DESTINATION_UNREACHIBLE,
        
        /// <remarks/>
        DIALING_ERROR,
        
        /// <remarks/>
        GATEWAY_TIMEOUT,
        
        /// <remarks/>
        ISDN_NETWORK_FAILURE,
        
        /// <remarks/>
        BUSY,
        
        /// <remarks/>
        NO_ANSWER,
        
        /// <remarks/>
        NO_DIAL_TONE,
        
        /// <remarks/>
        RECEIVER_INCOMPATIBLE,
        
        /// <remarks/>
        TEMPORARILY_UNAVAILABLE,
        
        /// <remarks/>
        TRANSMISSION_ABORTED,
        
        /// <remarks/>
        TRANSMISSION_EARLY_HANGUP,
        
        /// <remarks/>
        TRANSMISSION_ERROR,
        
        /// <remarks/>
        NEGOTIATION_FAILED,
        
        /// <remarks/>
        NOT_FAX_MACHINE,
        
        /// <remarks/>
        VOICE_ANSWER,
        
        /// <remarks/>
        DELIVERY_FAILURE,
        
        /// <remarks/>
        MESSAGE_REFERENCE_DUPLICATE,
        
        /// <remarks/>
        FAXJOB_NOT_FOUND,
        
        /// <remarks/>
        FAXJOB_NOT_FAILED,
        
        /// <remarks/>
        FAXJOB_NOT_WAITING,
        
        /// <remarks/>
        FAXTRANSPORT_NOT_FOUND,
        
        /// <remarks/>
        FAXTRANSPORT_NOT_WAITING,
        
        /// <remarks/>
        CONTAINER_EXISTS,
        
        /// <remarks/>
        CONTAINER_NOT_FOUND,
        
        /// <remarks/>
        CONTAINER_DELETED,
        
        /// <remarks/>
        CONTAINER_ACCESS_DENIED,
        
        /// <remarks/>
        CONTAINER_DOCUMENT_DUPLICATE,
        
        /// <remarks/>
        CONTAINER_PAGES_LIMIT_EXCEEDED,
        
        /// <remarks/>
        COVER_TEMPLATE_NOT_FOUND,
        
        /// <remarks/>
        COVER_TEMPLATE_DELETED,
        
        /// <remarks/>
        COVER_TEMPLATE_ACCESS_DENIED,
        
        /// <remarks/>
        FAXPRICE_NOT_FOUND,
        
        /// <remarks/>
        RESUBMIT_FAILED,
        
        /// <remarks/>
        DID_NUMBER_LOCKED,
        
        /// <remarks/>
        DID_SOURCE_NOT_FAXIN,
        
        /// <remarks/>
        DID_CUSTOMER_NOT_MATCH,
        
        /// <remarks/>
        DID_WRONG_FAXIN_STATE,
        
        /// <remarks/>
        DID_GROUP_NOT_CONNECTED,
        
        /// <remarks/>
        DID_EXTEND_TOO_EARLY,
        
        /// <remarks/>
        DID_ORDER_PENDING_ACTIVATION,
        
        /// <remarks/>
        FILE_PREVIEW_NOT_READY,
        
        /// <remarks/>
        FILE_CONVERTION_FAILED,
        
        /// <remarks/>
        FILE_PAGES_LIMIT_EXCEEDED,
        
        /// <remarks/>
        COMMON_EMAIL_SEND_ERROR,
        
        /// <remarks/>
        QUEUE_TASK_ABORTED,
        
        /// <remarks/>
        FILE_TIFF_DEPTH_VALIDATION,
        
        /// <remarks/>
        FILE_TIFF_FORMAT_VALIDATION,
        
        /// <remarks/>
        FILE_TIFF_QUALITY_VALIDATION,
        
        /// <remarks/>
        FILE_TIFF_PAGES_VALIDATION,
        
        /// <remarks/>
        FILE_TIFF_WIDTH_VALIDATION,
        
        /// <remarks/>
        FILE_TIFF_HEIGHT_VALIDATION,
        
        /// <remarks/>
        NUMBER_ADDRESS_NOT_REQUIRED,
        
        /// <remarks/>
        NUMBER_OUT_OF_STOCK,
        
        /// <remarks/>
        NUMBER_GROUP_NOT_AVAILABLE,
        
        /// <remarks/>
        NUMBER_ORDER_FAILURE,
        
        /// <remarks/>
        NUMBER_SETUP_FAILURE,
        
        /// <remarks/>
        NUMBER_ADDRESS_FAILURE,
        
        /// <remarks/>
        NUMBER_PROVIDER_NOT_RECOGNIZED,
        
        /// <remarks/>
        SESSION_TOKEN_MISMATCH,
        
        /// <remarks/>
        SESSION_NOT_FOUND,
        
        /// <remarks/>
        SESSION_EXPIRED,
        
        /// <remarks/>
        CONFIRM_TOKEN_NOT_FOUND,
        
        /// <remarks/>
        CONFIRM_TOKEN_TYPE_MISMATCH,
        
        /// <remarks/>
        CONFIRM_TOKEN_SOURCE_MISMATCH,
        
        /// <remarks/>
        CONFIRM_TOKEN_USER_MISMATCH,
        
        /// <remarks/>
        CONFIRM_TOKEN_EXPIRED,
        
        /// <remarks/>
        CONFIRM_TOKEN_VALIDATED,
        
        /// <remarks/>
        CONFIRM_TOKEN_INVALIDATED,
        
        /// <remarks/>
        CONFIRM_TOKEN_CLOSED,
        
        /// <remarks/>
        SEND_SMS_FREQUENCY_EXCEEDED,
        
        /// <remarks/>
        CONTACT_GROUP_IN_USE,
        
        /// <remarks/>
        CONTACT_GROUP_NOT_FOUND,
        
        /// <remarks/>
        CONTACT_GROUP_ACCESS_DENIED,
        
        /// <remarks/>
        CONTACT_ITEM_NOT_FOUND,
        
        /// <remarks/>
        CONTACT_ITEM_ACCESS_DENIED,
        
        /// <remarks/>
        CONTACT_NUMBER_IN_USE,
        
        /// <remarks/>
        NUMBER_ITEM_EXISTS,
        
        /// <remarks/>
        STORAGE_ALREADY_CONNECTED,
        
        /// <remarks/>
        STORAGE_REVOKE_FAILURE,
        
        /// <remarks/>
        STORAGE_NOT_CONNECTED,
        
        /// <remarks/>
        STORAGE_NOT_FOUND,
        
        /// <remarks/>
        INSUFFICIENT_FUNDS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceDocument")]
    public partial class ApiResponseDocUpload : ApiResponse
    {
        
        private string documentRefField;
        
        private FileContentGroup documentTypeField;
        
        private bool documentTypeFieldSpecified;
        
        private long fileSizeField;
        
        private bool fileSizeFieldSpecified;
        
        private string fileCheckField;
        
        private string fileMimeField;
        
        /// <remarks/>
        public string documentRef
        {
            get
            {
                return this.documentRefField;
            }
            set
            {
                this.documentRefField = value;
            }
        }
        
        /// <remarks/>
        public FileContentGroup documentType
        {
            get
            {
                return this.documentTypeField;
            }
            set
            {
                this.documentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool documentTypeSpecified
        {
            get
            {
                return this.documentTypeFieldSpecified;
            }
            set
            {
                this.documentTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long fileSize
        {
            get
            {
                return this.fileSizeField;
            }
            set
            {
                this.fileSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool fileSizeSpecified
        {
            get
            {
                return this.fileSizeFieldSpecified;
            }
            set
            {
                this.fileSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string fileCheck
        {
            get
            {
                return this.fileCheckField;
            }
            set
            {
                this.fileCheckField = value;
            }
        }
        
        /// <remarks/>
        public string fileMime
        {
            get
            {
                return this.fileMimeField;
            }
            set
            {
                this.fileMimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceDocument")]
    public enum FileContentGroup
    {
        
        /// <remarks/>
        UNK,
        
        /// <remarks/>
        PDF,
        
        /// <remarks/>
        TIFF,
        
        /// <remarks/>
        IMAGE,
        
        /// <remarks/>
        MS_OFFICE,
        
        /// <remarks/>
        OP_OFFICE,
        
        /// <remarks/>
        ST_OFFICE,
        
        /// <remarks/>
        PLAIN_TEXT,
        
        /// <remarks/>
        OTHER,
        
        /// <remarks/>
        HTML,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ApiResponseDocPreview))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceDocument")]
    public partial class ApiResponseFileDownload : ApiResponse
    {
        
        private FaxFile documentField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public FaxFile Document
        {
            get
            {
                return this.documentField;
            }
            set
            {
                this.documentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceDocument")]
    public partial class FaxFile
    {
        
        private string fileNameField;
        
        private string fileMimeField;
        
        private long fileSizeField;
        
        private bool fileSizeFieldSpecified;
        
        private string fileCheckField;
        
        private byte[] fileDataField;
        
        /// <remarks/>
        public string fileName
        {
            get
            {
                return this.fileNameField;
            }
            set
            {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string fileMime
        {
            get
            {
                return this.fileMimeField;
            }
            set
            {
                this.fileMimeField = value;
            }
        }
        
        /// <remarks/>
        public long fileSize
        {
            get
            {
                return this.fileSizeField;
            }
            set
            {
                this.fileSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool fileSizeSpecified
        {
            get
            {
                return this.fileSizeFieldSpecified;
            }
            set
            {
                this.fileSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string fileCheck
        {
            get
            {
                return this.fileCheckField;
            }
            set
            {
                this.fileCheckField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
        public byte[] fileData
        {
            get
            {
                return this.fileDataField;
            }
            set
            {
                this.fileDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceDocument")]
    public partial class ApiResponseDocPreview : ApiResponseFileDownload
    {
        
        private int pagesField;
        
        private bool pagesFieldSpecified;
        
        /// <remarks/>
        public int pages
        {
            get
            {
                return this.pagesField;
            }
            set
            {
                this.pagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool pagesSpecified
        {
            get
            {
                return this.pagesFieldSpecified;
            }
            set
            {
                this.pagesFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceDocument")]
    public partial class FaxDocument
    {
        
        private string documentRefField;
        
        private FaxFile documentFileField;
        
        /// <remarks/>
        public string documentRef
        {
            get
            {
                return this.documentRefField;
            }
            set
            {
                this.documentRefField = value;
            }
        }
        
        /// <remarks/>
        public FaxFile documentFile
        {
            get
            {
                return this.documentFileField;
            }
            set
            {
                this.documentFileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceDocument")]
    public enum FaxQuality
    {
        
        /// <remarks/>
        UNKNOWN,
        
        /// <remarks/>
        BASIC,
        
        /// <remarks/>
        STANDARD,
        
        /// <remarks/>
        FINE,
        
        /// <remarks/>
        SUPER_FINE,
        
        /// <remarks/>
        ULTRA_FINE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:ApiServiceDocument")]
    public enum FaxMode
    {
        
        /// <remarks/>
        UNKNOWN,
        
        /// <remarks/>
        TEXT,
        
        /// <remarks/>
        PHOTO,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface ApiServiceDocumentSoapChannel : document.ApiServiceDocumentSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class ApiServiceDocumentSoapClient : System.ServiceModel.ClientBase<document.ApiServiceDocumentSoap>, document.ApiServiceDocumentSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ApiServiceDocumentSoapClient() : 
                base(ApiServiceDocumentSoapClient.GetDefaultBinding(), ApiServiceDocumentSoapClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.ApiServiceDocumentSoap.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ApiServiceDocumentSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(ApiServiceDocumentSoapClient.GetBindingForEndpoint(endpointConfiguration), ApiServiceDocumentSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ApiServiceDocumentSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ApiServiceDocumentSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ApiServiceDocumentSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ApiServiceDocumentSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ApiServiceDocumentSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public document.ApiResponseDocUpload uploadDocument(document.FaxDocument uploadDocument1)
        {
            return base.Channel.uploadDocument(uploadDocument1);
        }
        
        public System.Threading.Tasks.Task<document.ApiResponseDocUpload> uploadDocumentAsync(document.FaxDocument uploadDocument)
        {
            return base.Channel.uploadDocumentAsync(uploadDocument);
        }
        
        public document.ApiResponseFileDownload downloadDocument(string documentRef)
        {
            return base.Channel.downloadDocument(documentRef);
        }
        
        public System.Threading.Tasks.Task<document.ApiResponseFileDownload> downloadDocumentAsync(string documentRef)
        {
            return base.Channel.downloadDocumentAsync(documentRef);
        }
        
        public document.ApiResponse deleteDocuments(string[] documentRefs)
        {
            return base.Channel.deleteDocuments(documentRefs);
        }
        
        public System.Threading.Tasks.Task<document.ApiResponse> deleteDocumentsAsync(string[] documentRefs)
        {
            return base.Channel.deleteDocumentsAsync(documentRefs);
        }
        
        public document.ApiResponseDocUpload checkDocument(string documentRef)
        {
            return base.Channel.checkDocument(documentRef);
        }
        
        public System.Threading.Tasks.Task<document.ApiResponseDocUpload> checkDocumentAsync(string documentRef)
        {
            return base.Channel.checkDocumentAsync(documentRef);
        }
        
        public document.ApiResponseDocPreview getDocumentPreview(string documentRef, document.FaxQuality quality, document.FaxMode conversion)
        {
            return base.Channel.getDocumentPreview(documentRef, quality, conversion);
        }
        
        public System.Threading.Tasks.Task<document.ApiResponseDocPreview> getDocumentPreviewAsync(string documentRef, document.FaxQuality quality, document.FaxMode conversion)
        {
            return base.Channel.getDocumentPreviewAsync(documentRef, quality, conversion);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ApiServiceDocumentSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ApiServiceDocumentSoap))
            {
                return new System.ServiceModel.EndpointAddress("https://api.byfax.biz/soap/1.1/document");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ApiServiceDocumentSoapClient.GetBindingForEndpoint(EndpointConfiguration.ApiServiceDocumentSoap);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ApiServiceDocumentSoapClient.GetEndpointAddress(EndpointConfiguration.ApiServiceDocumentSoap);
        }
        
        public enum EndpointConfiguration
        {
            
            ApiServiceDocumentSoap,
        }
    }
}
